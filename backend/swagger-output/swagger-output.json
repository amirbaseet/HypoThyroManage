{
  "openapi": "3.0.0",
  "info": {
    "title": "HypoThyroManage API Documentation",
    "version": "1.0.0",
    "description": "API documentation for HypoThyroManage backend services"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local/Docker API server"
    }
  ],
  "paths": {
    "/api/admin/form-windows": {
      "post": {
        "summary": "Create a new Symptom Form Window (admin only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Week 1 Form"
                  },
                  "symptomSeverityFormLink": {
                    "type": "string",
                    "example": "https://forms.example.com/severity"
                  },
                  "copingScaleFormLink": {
                    "type": "string",
                    "example": "https://forms.example.com/coping"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Form window created successfully"
          },
          "400": {
            "description": "Form window for this week already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get all Symptom Form Windows (admin only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all form windows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "weekStart": {
                        "type": "string",
                        "format": "date"
                      },
                      "weekEnd": {
                        "type": "string",
                        "format": "date"
                      },
                      "symptomSeverityFormLink": {
                        "type": "string"
                      },
                      "copingScaleFormLink": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/form-windows/{id}/toggle": {
      "patch": {
        "summary": "Toggle the isActive status of a form window (admin only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the form window"
          }
        ],
        "responses": {
          "200": {
            "description": "Status updated"
          },
          "404": {
            "description": "Form window not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "description": "Must be exactly 6 digits"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "doctor",
                      "patient"
                    ]
                  },
                  "adminKey": {
                    "type": "string",
                    "description": "Required if creating an admin account"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Unauthorized to create admin"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Log in a user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Log out a user",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          },
          "500": {
            "description": "Logout failed"
          }
        }
      }
    },
    "/api/auth/update-push-token": {
      "post": {
        "summary": "Update a user's Expo push token",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "pushToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Push token updated successfully"
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/remove-push-token": {
      "post": {
        "summary": "Remove a user's Expo push token",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Push token removed successfully"
          },
          "400": {
            "description": "Missing userId"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/admin/reset-password": {
      "post": {
        "summary": "Reset a user's password (Admin only)",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "Must be exactly 6 digits"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid password format"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "summary": "Get a new access token using a refresh token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated"
          },
          "401": {
            "description": "Refresh token required"
          },
          "403": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/api/exportToExcel/export-all-medicine-logs": {
      "get": {
        "summary": "Export all medicine logs for all patients (admin/doctor only)",
        "tags": [
          "Export"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file of all medicine logs",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/exportToExcel/export-weekly-reports": {
      "get": {
        "summary": "Export all weekly symptom reports for all patients (admin/doctor only)",
        "tags": [
          "Export"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Excel file of all weekly reports",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/medicine/take": {
      "post": {
        "summary": "Log today's medicine intake (patients only)",
        "tags": [
          "Medicine"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taken": {
                    "type": "boolean",
                    "description": "Whether the medicine was taken (default: true)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Medicine log updated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/medicine/progress": {
      "get": {
        "summary": "Get a patient's medicine intake progress over time",
        "tags": [
          "Medicine"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "schema": {
              "type": "integer"
            },
            "description": "Number of days to fetch (default: 60)"
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "description": "Patient userId (doctors can specify; patients default to own)"
          }
        ],
        "responses": {
          "200": {
            "description": "Weekly grouped medicine intake progress",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "weeks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "weekStart": {
                            "type": "string",
                            "format": "date"
                          },
                          "weekEnd": {
                            "type": "string",
                            "format": "date"
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "taken": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/medicine/missed-medicine-users": {
      "get": {
        "summary": "Get patients who missed today's medicine (doctors only)",
        "tags": [
          "Medicine"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of patients who missed today's medicine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "missedUsers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          },
                          "phoneNumber": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/messages/send": {
      "post": {
        "summary": "Send an encrypted message between patient and doctor",
        "tags": [
          "Messaging"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senderId": {
                    "type": "string"
                  },
                  "receiverId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "senderId",
                  "receiverId",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/messages/chatHistory": {
      "post": {
        "summary": "Get chat history between two users (decrypted)",
        "tags": [
          "Messaging"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user1": {
                    "type": "string"
                  },
                  "user2": {
                    "type": "string"
                  }
                },
                "required": [
                  "user1",
                  "user2"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat history between two users"
          },
          "400": {
            "description": "User(s) not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/messages/markAsRead": {
      "post": {
        "summary": "Mark all messages as read between two users",
        "tags": [
          "Messaging"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senderId": {
                    "type": "string"
                  },
                  "receiverId": {
                    "type": "string"
                  }
                },
                "required": [
                  "senderId",
                  "receiverId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Messages marked as read"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/messages/doctor-chats": {
      "get": {
        "summary": "Get doctor's chat list with patients (last message and unread count)",
        "tags": [
          "Messaging"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of chat summaries for doctor"
          },
          "400": {
            "description": "Doctor ID missing"
          },
          "500": {
            "description": "Server error fetching chat list"
          }
        }
      }
    },
    "/api/messages/unread-count": {
      "get": {
        "summary": "Get unread message count for a patient (for red dot indicator)",
        "tags": [
          "Messaging"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The patient's userId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of unread messages"
          },
          "500": {
            "description": "Error fetching unread count"
          }
        }
      }
    },
    "/api/patient/form-windows/active": {
      "get": {
        "summary": "Get active form windows (for patients)",
        "tags": [
          "Patient"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of active form windows with form links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "symptomSeverityFormLink": {
                        "type": "string"
                      },
                      "copingScaleFormLink": {
                        "type": "string"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "weekStart": {
                        "type": "string",
                        "format": "date"
                      },
                      "weekEnd": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notifications/send": {
      "post": {
        "summary": "Send a push notification to a specific user (test endpoint)",
        "tags": [
          "Notifications"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The user's ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "Notification title"
                  },
                  "message": {
                    "type": "string",
                    "description": "Notification body"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent successfully"
          },
          "400": {
            "description": "Invalid Expo push token"
          },
          "404": {
            "description": "User push token not found"
          },
          "500": {
            "description": "Failed to send notification"
          }
        }
      }
    },
    "/api/notifications/send-to-all": {
      "post": {
        "summary": "Send a push notification to all users (admin only)",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Notification title"
                  },
                  "message": {
                    "type": "string",
                    "description": "Notification body"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notifications sent successfully to all users"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/reports/submit-report": {
      "patch": {
        "summary": "Submit or update a weekly report (patient only)",
        "tags": [
          "Weekly Reports"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "symptoms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "symptomId": {
                          "type": "string"
                        },
                        "hasSymptom": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Weekly report updated successfully"
          },
          "201": {
            "description": "Weekly report created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/reports/{userId}": {
      "get": {
        "summary": "Get all reports for a specific user",
        "tags": [
          "Weekly Reports"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of reports"
          },
          "404": {
            "description": "No reports found for this user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/reports/latest-report/{userId}": {
      "get": {
        "summary": "Get the latest weekly report for a user",
        "tags": [
          "Weekly Reports"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Latest report for current week"
          },
          "404": {
            "description": "No report found for current week"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/reports/doctor/{doctorId}": {
      "get": {
        "summary": "Get all reports for patients assigned to a specific doctor",
        "tags": [
          "Weekly Reports"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "doctorId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The doctor's user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of reports and patients"
          },
          "404": {
            "description": "No patients found for this doctor"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/symptoms": {
      "get": {
        "summary": "Get all symptoms",
        "tags": [
          "Symptoms"
        ],
        "responses": {
          "200": {
            "description": "List of all symptoms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new symptom",
        "tags": [
          "Symptoms"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Fatigue"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Symptom created successfully"
          },
          "400": {
            "description": "Invalid data"
          }
        }
      }
    },
    "/api/users/admin": {
      "get": {
        "summary": "Access admin-only route",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Welcome message for admin"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/users/manager": {
      "get": {
        "summary": "Access manager-only route",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Welcome message for manager"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/users/user": {
      "get": {
        "summary": "Access user-level route (admin, manager, or user)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Welcome message for user"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/users/publicKey/{userId}": {
      "get": {
        "summary": "Get the public key of a user by ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User's public key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publicKey": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User has no public key"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {},
  "tags": [
    {
      "name": "Admin",
      "description": "Endpoints for managing Symptom Form Windows"
    },
    {
      "name": "Authentication",
      "description": "API endpoints for user authentication"
    },
    {
      "name": "Export",
      "description": "Endpoints for exporting data to Excel"
    },
    {
      "name": "Medicine",
      "description": "Endpoints for managing medicine intake and tracking"
    },
    {
      "name": "Messaging",
      "description": "Chat functionality between doctors and patients"
    },
    {
      "name": "Patient",
      "description": "Endpoints for patients (e.g., symptom forms)"
    },
    {
      "name": "Notifications",
      "description": "Manage push notifications"
    },
    {
      "name": "Weekly Reports",
      "description": "Manage patient weekly symptom reports"
    },
    {
      "name": "Symptoms",
      "description": "Manage symptom definitions"
    },
    {
      "name": "Users",
      "description": "User utilities and access control endpoints"
    }
  ]
}